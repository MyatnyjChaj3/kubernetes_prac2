---
- name: Setup kubectl on control node
  hosts: k8s_master
  become: yes

  tasks:
    - name: 1. Read kubeconfig file from master node into a variable
      ansible.builtin.slurp:
        src: /etc/kubernetes/admin.conf
      register: kubeconfig_slurped

    - name: 2. Ensure .kube directory exists on control node
      delegate_to: localhost
      become: no
      ansible.builtin.file:
        path: ~/.kube
        state: directory
        mode: '0755'

    - name: 3. Create kubeconfig file on control node from variable
      delegate_to: localhost
      become: no
      ansible.builtin.copy:
        content: "{{ kubeconfig_slurped['content'] | b64decode }}"
        dest: ~/.kube/config
        mode: '0600'

    - name: 4. Update server IP in the kubeconfig on control node
      delegate_to: localhost
      ansible.builtin.replace:
        path: ~/.kube/config
        regexp: '^\s*server: https://.*:6443'
        replace: "    server: https://{{ hostvars['k8s-master-01']['ansible_default_ipv4']['address'] }}:6443"

    - name: 5. Install kubectl on control node if needed
      delegate_to: localhost
      become: yes
      ansible.builtin.copy:
        # Заменяем IP-адрес в исходном файле на правильный IP мастера и записываем результат
        content: "{{ kubeconfig_decoded | regex_replace('server: https://.*:6443', 'server: https://' + master_ip + ':6443') }}"
        dest: "{{ lookup('env', 'HOME') }}/.kube/config"
        mode: '0600'

    - name: 6. Verify kubectl access to the cluster
      delegate_to: localhost
      become: no
      ansible.builtin.command: kubectl get nodes
      register: kubectl_nodes
      changed_when: false

    - name: 7. Display cluster nodes info
      delegate_to: localhost
      ansible.builtin.debug:
        msg: "{{ kubectl_nodes.stdout_lines }}"
