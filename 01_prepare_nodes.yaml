---
- name: Prepare all Kubernetes nodes
  hosts: k8s_all
  become: yes
  vars:
    k8s_version: "1.33.5"

  tasks:
    - name: 1. Disable swap for kubelet
      ansible.builtin.shell: |
        swapoff -a
        sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
      changed_when: false

    - name: 2. Load required kernel modules
      ansible.builtin.shell: |
        cat <<EOF | tee /etc/modules-load.d/k8s.conf
        overlay
        br_netfilter
        EOF
        modprobe overlay
        modprobe br_netfilter
      changed_when: false

    - name: 3. Configure sysctl params for Kubernetes networking
      ansible.builtin.shell: |
        cat <<EOF | tee /etc/sysctl.d/k8s.conf
        net.bridge.bridge-nf-call-iptables  = 1
        net.bridge.bridge-nf-call-ip6tables = 1
        net.ipv4.ip_forward                 = 1
        EOF
        sysctl --system
      changed_when: false

    - name: 4. Install prerequisite packages
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
        state: present
        update_cache: yes

    # --- НОВЫЕ ЗАДАЧИ ДЛЯ РЕПОЗИТОРИЯ DOCKER ---
    - name: 5. Create directory for APT keyrings if it does not exist
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: 6. Add Docker's official GPG key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/debian/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'
        force: true

    - name: 7. Add the Docker repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
        state: present
        filename: docker
    # --- КОНЕЦ НОВЫХ ЗАДАЧ ---

    - name: 8. Install containerd.io
      ansible.builtin.apt:
        name: containerd.io
        state: present
        update_cache: yes # Важно обновить кэш после добавления нового репозитория
      when: inventory_hostname in groups['k8s_workers']

    - name: 9. Configure containerd with SystemdCgroup
      ansible.builtin.shell: |
        mkdir -p /etc/containerd
        containerd config default | tee /etc/containerd/config.toml
        sed -i 's/SystemdCgroup = false/SystemdCgroup = true/' /etc/containerd/config.toml
      changed_when: false
      notify: Restart containerd

    # --- Kubernetes Repo and Packages ---
    - name: 10. Add Kubernetes GPG key
      ansible.builtin.get_url:
        url: https://pkgs.k8s.io/core:/stable:/v{{ k8s_version.split('.')[0] }}.{{ k8s_version.split('.')[1] }}/deb/Release.key
        dest: /etc/apt/keyrings/kubernetes-apt-keyring.asc
        mode: '0644'

    - name: 11. Add Kubernetes APT repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.asc] https://pkgs.k8s.io/core:/stable:/v{{ k8s_version.split('.')[0] }}.{{ k8s_version.split('.')[1] }}/deb/ /"
        state: present
        filename: kubernetes

    - name: 12. Install kubelet, kubeadm, and kubectl
      ansible.builtin.apt:
        name:
          - kubelet={{ k8s_version }}-*
          - kubeadm={{ k8s_version }}-*
          - kubectl={{ k8s_version }}-*
        state: present
        update_cache: yes
        allow_downgrade: yes

    - name: 13. Hold Kubernetes packages to prevent auto-updates
      ansible.builtin.dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop:
        - kubelet
        - kubeadm
        - kubectl

  handlers:
    - name: Restart containerd
      ansible.builtin.systemd:
        name: containerd
        state: restarted
        enabled: yes
        daemon_reload: yes
