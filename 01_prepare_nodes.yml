---
- name: Prepare all Kubernetes nodes
  hosts: k8s_all
  become: yes
  vars:
    k8s_version: "1.28.5"
  tasks:
    - name: Disable swap
      ansible.builtin.shell: |
        swapoff -a
        sed -i '/ swap / s/^$$ .* $$$/#\1/g' /etc/fstab
      args:
        executable: /bin/bash

    - name: Load kernel modules
      ansible.builtin.copy:
        content: |
          overlay
          br_netfilter
        dest: /etc/modules-load.d/k8s.conf
        mode: '0644'
      notify: Load kernel modules

    - name: Configure sysctl params
      ansible.builtin.copy:
        content: |
          net.bridge.bridge-nf-call-iptables = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward = 1
        dest: /etc/sysctl.d/k8s.conf
        mode: '0644'
      notify: Apply sysctl params

    - name: Install required packages
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
        update_cache: yes

    - name: Add Kubernetes GPG key
      ansible.builtin.apt_key:
        url: https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key
        state: present

    - name: Add Kubernetes repository
      ansible.builtin.apt_repository:
        repo: "deb https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /"
        state: present
        filename: kubernetes

    - name: Install containerd
      ansible.builtin.apt:
        name: containerd.io
        state: present
        update_cache: yes

    - name: Configure containerd
      ansible.builtin.copy:
        content: |
          version = 2
          [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
            runtime_type = "io.containerd.runc.v2"
          [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
            SystemdCgroup = true
        dest: /etc/containerd/config.toml
        mode: '0644'
      notify: Restart containerd

    - name: Install Kubernetes packages
      ansible.builtin.apt:
        name:
          - kubelet={{ k8s_version }}-00
          - kubeadm={{ k8s_version }}-00
          - kubectl={{ k8s_version }}-00
        state: present
        update_cache: yes

    - name: Hold Kubernetes packages
      ansible.builtin.dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop:
        - kubelet
        - kubeadm
        - kubectl

  handlers:
    - name: Load kernel modules
      ansible.builtin.shell: |
        modprobe overlay
        modprobe br_netfilter
      args:
        executable: /bin/bash

    - name: Apply sysctl params
      ansible.builtin.shell: |
        sysctl --system
      args:
        executable: /bin/bash

    - name: Restart containerd
      ansible.builtin.systemd:
        name: containerd
        state: restarted
        enabled: yes
